[manifest]
version = "1.0.0"
dump_lua = true
priority = -1

# Handle buying cards that require ~~pyrox~~ CREDITS
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''local t2 = card.ability.set == 'Voucher' and {'''
position = 'before'
payload = '''
if card.config and card.config.center and card.config.center.credits and not G.HP_HC_MARKET_VISIBLE then
	t1 = {
		n = G.UIT.ROOT,
		config = { minw = 0.6, align = 'tm', colour = darken(G.C.BLACK, 0.2), shadow = true, r = 0.05, padding = 0.05, minh = 1 },
		nodes = {
			{
				n = G.UIT.R,
				config = { align = "cm", colour = lighten(G.C.BLACK, 0.1), r = 0.1, minw = 1, minh = 0.55, emboss = 0.05, padding = 0.03 },
				nodes = {
					{ n = G.UIT.O, config = { object = DynaText({ string = { { prefix = "e.", ref_table = card.config.center, ref_value = 'credits' } }, colours = { {0.8, 0.45, 0.85, 1} }, shadow = true, silent = true, bump = true, pop_in = 0, scale = 0.5 }) } },
				}
			}
		}
	}
end
'''
match_indent = true
times = 1

# now you gotta SELL em
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''
  if card.area and card.area.config.type == 'joker' then
    sell = {n=G.UIT.C, config={align = "cr"}, nodes={
      {n=G.UIT.C, config={ref_table = card, align = "cr",padding = 0.1, r=0.08, minw = 1.25, hover = true, shadow = true, colour = G.C.UI.BACKGROUND_INACTIVE, one_press = true, button = 'sell_card', func = 'can_sell_card'}, nodes={
        {n=G.UIT.B, config = {w=0.1,h=0.6}},
        {n=G.UIT.C, config={align = "tm"}, nodes={
          {n=G.UIT.R, config={align = "cm", maxw = 1.25}, nodes={
            {n=G.UIT.T, config={text = localize('b_sell'),colour = G.C.UI.TEXT_LIGHT, scale = 0.4, shadow = true}}
          }},
          {n=G.UIT.R, config={align = "cm"}, nodes={
            {n=G.UIT.T, config={text = localize('$'),colour = G.C.WHITE, scale = 0.4, shadow = true}},
            {n=G.UIT.T, config={ref_table = card, ref_value = 'sell_cost_label',colour = G.C.WHITE, scale = 0.55, shadow = true}}
          }}
        }}
      }},
    }}
  end'''
position = 'at'
payload = '''
  if card.area and card.area.config.type == 'joker' then
  if card.config.center.credits then
    sell = {n=G.UIT.C, config={align = "cr"}, nodes={
      {n=G.UIT.C, config={ref_table = card, align = "cr",padding = 0.1, r=0.08, minw = 1.25, hover = true, shadow = true, colour = G.C.UI.BACKGROUND_INACTIVE, one_press = true, button = 'sell_card', func = 'can_sell_card'}, nodes={
        {n=G.UIT.B, config = {w=0.1,h=0.6}},
        {n=G.UIT.C, config={align = "tm"}, nodes={
          {n=G.UIT.R, config={align = "cm", maxw = 1.25}, nodes={
            {n=G.UIT.T, config={text = localize('b_sell'),colour = G.C.UI.TEXT_LIGHT, scale = 0.4, shadow = true}}
          }},
          {n=G.UIT.R, config={align = "cm"}, nodes={
            {n=G.UIT.T, config={text = "e.",colour = G.C.WHITE, scale = 0.4, shadow = true}},
             {n=G.UIT.T, config={ref_table = card, ref_value = 'sell_cost_label',colour = G.C.WHITE, scale = 0.55, shadow = true}}
          }}
        }}
      }},
    }}
	else
	sell = {n=G.UIT.C, config={align = "cr"}, nodes={
      {n=G.UIT.C, config={ref_table = card, align = "cr",padding = 0.1, r=0.08, minw = 1.25, hover = true, shadow = true, colour = G.C.UI.BACKGROUND_INACTIVE, one_press = true, button = 'sell_card', func = 'can_sell_card'}, nodes={
        {n=G.UIT.B, config = {w=0.1,h=0.6}},
        {n=G.UIT.C, config={align = "tm"}, nodes={
          {n=G.UIT.R, config={align = "cm", maxw = 1.25}, nodes={
            {n=G.UIT.T, config={text = localize('b_sell'),colour = G.C.UI.TEXT_LIGHT, scale = 0.4, shadow = true}}
          }},
          {n=G.UIT.R, config={align = "cm"}, nodes={
            {n=G.UIT.T, config={text = localize('$'),colour = G.C.WHITE, scale = 0.4, shadow = true}},
            {n=G.UIT.T, config={ref_table = card, ref_value = 'sell_cost_label',colour = G.C.WHITE, scale = 0.55, shadow = true}}
          }}
        }}
      }},
    }}
	end
  end
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''
if self.area and ((self.area == G.jokers) or (self.area == G.consumeables)) then
            self.bypass_lock = true
            self.bypass_discovery_center = true
            self.bypass_discovery_ui = true
        end
        self.sell_cost_label = self.facing == 'back' and '?' or self.sell_cost'''
position = 'at'
payload = '''
if self.area and ((self.area == G.jokers) or (self.area == G.consumeables)) then
            self.bypass_lock = true
            self.bypass_discovery_center = true
            self.bypass_discovery_ui = true
        end
        if not self.config.center.credits then
          self.sell_cost_label = self.facing == 'back' and '?' or self.sell_cost
        else
          self.sell_cost_label = self.facing == 'back' and '?' or (self.config.center.credits / 2)
        end
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''
    if self.area and self.ability.couponed and (self.area == G.shop_jokers or self.area == G.shop_booster) then self.cost = 0 end
    self.sell_cost_label = self.facing == 'back' and '?' or self.sell_cost'''
position = 'at'
payload = '''
    if self.area and self.ability.couponed and (self.area == G.shop_jokers or self.area == G.shop_booster) then self.cost = 0 end
     if not self.config.center.credits then
          self.sell_cost_label = self.facing == 'back' and '?' or self.sell_cost
        else
          self.sell_cost_label = self.facing == 'back' and '?' or (self.config.center.credits / 2)
        end
'''
match_indent = true
times = 1


[[patches]]
[patches.pattern]
target = 'functions/button_callbacks.lua'
pattern = '''if c1.cost ~= 0 then'''
position = 'at'
payload = '''
if c1.hpot_transaction_price then
  ease_currency(c1.hpot_transaction_price.currency, -c1.hpot_transaction_price.price)
elseif c1.config and c1.config.center and c1.config.center.credits and not c1.market_cost then
	HPTN.ease_budget(-c1.config.center.credits)
elseif c1.market_cost then
  if not Entropy or (not Entropy.has_rune("rune_entr_naudiz") or not G.GAME.providence) then
    ease_cryptocurrency(-c1.market_cost)
    if math.abs(G.GAME.cryptocurrency) < 0.0001 then G.GAME.cryptocurrency = 0 end
  end
elseif c1.cost ~= 0 then
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''if self.cost > 0 then '''
position = 'at'
payload = '''
if self.config and self.config.center and self.config.center.credits and not G.GAME.DefineBoosterState and not self.market_cost then
	HPTN.ease_budget(-self.config.center.credits)
elseif self.market_cost then
  ease_cryptocurrency(-self.market_cost)
elseif self.cost > 0 then
'''
match_indent = true
times = 1

[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = '''
    G.E_MANAGER:add_event(Event({trigger = 'immediate',func = function()
        ease_dollars(self.sell_cost)
        self:start_dissolve({G.C.GOLD})
        delay(0.3)
'''
position = 'at'
payload = '''
    G.E_MANAGER:add_event(Event({trigger = 'immediate',func = function()
	    if self.config.center.credits and not G.HP_HC_MARKET_VISIBLE then
		HPTN.ease_budget(math.floor(self.config.center.credits/2))
		else
        ease_dollars(self.sell_cost)
		end
        self:start_dissolve({G.C.GOLD})
        delay(0.3)
'''
match_indent = true
times = 1


# So it doesn't show nil.. i think?
[[patches]]
[patches.pattern]
target = 'game.lua'
pattern = "local temp_profile = {"
position = 'after'
payload = '''
        TNameCredits = 25,
'''
match_indent = true
times = 1

# fuck my life
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''{type = 'Spectral', val = G.GAME.spectral_rate},'''
position = 'after'
payload = '''
{type = 'CreditablePool', val = G.GAME.creditable_rate},
'''
match_indent = true
times = 1

# fuck your life
[[patches]]
[patches.pattern]
target = 'functions/UI_definitions.lua'
pattern = '''local total_rate = G.GAME.joker_rate + G.GAME.playing_card_rate'''
position = 'after'
payload = '''
total_rate = total_rate + G.GAME.creditable_rate
'''
match_indent = true
